openapi: 3.0.1
info:
  title: Alephium API
  version: '1.0'
servers:
- url: http://{host}:{port}
  variables:
    host:
      default: localhost
    port:
      default: '12973'
paths:
  /wallets:
    get:
      tags:
      - Wallets
      summary: List available wallets
      operationId: getWallets
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WalletStatus'
              example:
              - walletName: wallet-super-name
                locked: true
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
    put:
      tags:
      - Wallets
      summary: Restore a wallet from your mnemonic
      operationId: putWallets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WalletRestore'
            example:
              password: my-secret-password
              mnemonic: vault alarm sad mass witness property virus style good flower
                rice alpha viable evidence run glare pretty scout evil judge enroll
                refuse another lava
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result1'
              example:
                walletName: wallet-super-name
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
    post:
      tags:
      - Wallets
      summary: Create a new wallet
      description: 'A new wallet will be created and respond with a mnemonic. Make sure to keep that mnemonic safely as it will allows you to recover your wallet. Default mnemonic size is 24, (options: 12, 15, 18, 21, 24).'
      operationId: postWallets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WalletCreation'
            examples:
              Example0:
                summary: Default
                value:
                  password: my-secret-password
              Example1:
                summary: More settings
                value:
                  password: my-secret-password
                  walletName: wallet-super-name
                  isMiner: true
                  mnemonicPassphrase: optional-mnemonic-passphrase
                  mnemonicSize: 12
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                walletName: wallet-super-name
                mnemonic: vault alarm sad mass witness property virus style good flower
                  rice alpha viable evidence run glare pretty scout evil judge enroll
                  refuse another lava
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /wallets/{wallet_name}/lock:
    post:
      tags:
      - Wallets
      summary: Lock your wallet
      operationId: postWalletsWallet_nameLock
      parameters:
      - name: wallet_name
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /wallets/{wallet_name}/unlock:
    post:
      tags:
      - Wallets
      summary: Unlock your wallet
      operationId: postWalletsWallet_nameUnlock
      parameters:
      - name: wallet_name
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WalletUnlock'
            example:
              password: my-secret-password
        required: true
      responses:
        '200':
          description: ''
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /wallets/{wallet_name}:
    delete:
      tags:
      - Wallets
      summary: Delete your wallet file (can be recovered with your mnemonic)
      operationId: deleteWalletsWallet_name
      parameters:
      - name: wallet_name
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WalletDeletion'
            example:
              password: my-secret-password
        required: true
      responses:
        '200':
          description: ''
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /wallets/{wallet_name}/balances:
    get:
      tags:
      - Wallets
      summary: Get your total balance
      operationId: getWalletsWallet_nameBalances
      parameters:
      - name: wallet_name
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balances'
              example:
                totalBalance: 1000000
                balances:
                - address: M1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y9n
                  balance: 1000000
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /wallets/{wallet_name}/transfer:
    post:
      tags:
      - Wallets
      summary: Transfer ALF
      operationId: postWalletsWallet_nameTransfer
      parameters:
      - name: wallet_name
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transfer'
            example:
              address: M1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y9n
              amount: 1000000
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result2'
              example:
                txId: 503bfb16230888af4924aa8f8250d7d348b862e267d75d3147f1998050b6da69
                fromGroup: 2
                toGroup: 1
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /wallets/{wallet_name}/addresses:
    get:
      tags:
      - Wallets
      summary: List all your wallet's addresses
      operationId: getWalletsWallet_nameAddresses
      parameters:
      - name: wallet_name
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addresses'
              example:
                activeAddress: M1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y9n
                addresses:
                - M1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y9n
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /wallets/{wallet_name}/miner-addresses:
    get:
      tags:
      - Miners
      summary: List all miner addresses per group
      description: This endpoint can only be called if the wallet was created with
        the `miner = true` flag
      operationId: getWalletsWallet_nameMiner-addresses
      parameters:
      - name: wallet_name
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MinerAddressesInfo'
              example:
              - addresses:
                - address: M1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y9n
                  group: 2
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /wallets/{wallet_name}/deriveNextAddress:
    post:
      tags:
      - Wallets
      summary: Derive your next address
      description: Cannot be called from a miner wallet
      operationId: postWalletsWallet_nameDerivenextaddress
      parameters:
      - name: wallet_name
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
              example: M1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y9n
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /wallets/{wallet_name}/deriveNextMinerAddresses:
    post:
      tags:
      - Miners
      summary: Derive your next miner addresses for each group
      description: "Your wallet need to have been created with the miner flag set to true"
      operationId: postWalletsWallet_nameDerivenextmineraddresses
      parameters:
      - name: wallet_name
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressInfo'
              example:
              - address: M1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y9n
                group: 2
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /wallets/{wallet_name}/changeActiveAddress:
    post:
      tags:
      - Wallets
      summary: Choose the active address
      operationId: postWalletsWallet_nameChangeactiveaddress
      parameters:
      - name: wallet_name
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeActiveAddress'
            example:
              address: M1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y9n
        required: true
      responses:
        '200':
          description: ''
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /infos/self-clique:
    get:
      tags:
      - Infos
      summary: Get info about your own clique
      operationId: getInfosSelf-clique
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfClique'
              example:
                cliqueId: b51d57737a6880aeaf94fd4587e50c139682b2e05fb18215c7b2689178d295645d
                networkType: mainnet
                numZerosAtLeastInHash: 18
                nodes:
                - address: 1.2.3.4
                  restPort: 12377
                  wsPort: 12366
                synced: true
                groupNumPerBroker: 1
                groups: 2
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                detail: Ouch
                status: 500
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
              example:
                detail: Self clique unsynced
                status: 503
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /infos/inter-clique-peer-info:
    get:
      tags:
      - Infos
      summary: Get infos about the inter cliques
      operationId: getInfosInter-clique-peer-info
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InterCliquePeerInfo'
              example:
              - cliqueId: 89329865fd774d03aa17faf8bca8de0a0e3f38d3a925374e12e66a1c64917181ee
                brokerId: 1
                groupNumPerBroker: 2
                address:
                  addr: 1.2.3.4
                  port: 12344
                isSynced: true
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                detail: Ouch
                status: 500
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
              example:
                detail: Self clique unsynced
                status: 503
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /infos/discovered-neighbors:
    get:
      tags:
      - Infos
      summary: Get discovered neighbors
      operationId: getInfosDiscovered-neighbors
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BrokerInfo'
              example:
              - cliqueId: bcc72e143462c5265c771bf1f0dc73d613bbd07754ee2934662a50d115dabbc3d4
                brokerId: 1
                groupNumPerBroker: 1
                address:
                  addr: 1.2.3.4
                  port: 12344
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                detail: Ouch
                status: 500
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
              example:
                detail: Self clique unsynced
                status: 503
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /infos/misbehaviors:
    get:
      tags:
      - Infos
      summary: Get the misbehaviors of peers
      operationId: getInfosMisbehaviors
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PeerMisbehavior'
              example:
              - peer: 1.2.3.4
                status:
                  type: penalty
                  value: 42
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                detail: Ouch
                status: 500
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
              example:
                detail: Self clique unsynced
                status: 503
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /blockflow:
    get:
      tags:
      - Blockflow
      summary: List blocks on the given time interval
      operationId: getBlockflow
      parameters:
      - name: fromTs
        in: query
        required: true
        schema:
          type: integer
          format: int64
          minimum: 0
      - name: toTs
        in: query
        required: true
        schema:
          type: integer
          format: int64
          minimum: 0
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchResponse'
              example:
                blocks:
                - hash: bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5
                  timestamp: 1611041396892
                  chainFrom: 1
                  chainTo: 2
                  height: 42
                  deps:
                  - 3bf667ece4614cb230053c0e061e5ed566b1fe5d0946a6655043c5811b853903
                  - 4925a27cc0aa6b95755f5f28254ef323a7dc7d721a2263efd1b555ba0dae1244
                  transactions:
                  - id: 65e7d7b73516fd28c63d1eab94b7bf9d6a16606bd0ecad28633605282353a1d8
                    inputs:
                    - outputRef:
                        scriptHint: 23412
                        key: da0e5d5f58fb26a22bf622ae9fef7ba33dcadc8fd23378e24fe0208baac9fd2d
                      unlockScript: 00da277f0ada2ea680e1a08419600a52bbf7c0d5033d0f0b14b84804c5af6f75dd5b
                    outputs:
                    - amount: 1000000000000000000
                      address: M1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y9n
                      lockTime: 1234
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                detail: Ouch
                status: 500
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
              example:
                detail: Self clique unsynced
                status: 503
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /blockflow/blocks/{block_hash}:
    get:
      tags:
      - Blockflow
      summary: Get a block with hash
      operationId: getBlockflowBlocksBlock_hash
      parameters:
      - name: block_hash
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockEntry'
              example:
                hash: 5fb4b535a78ea599a4528fa824ffd41749b1697d2a09c946c2ec9ea85c56e2f2
                timestamp: 1617972779693
                chainFrom: 1
                chainTo: 2
                height: 42
                deps:
                - 5e2ab311661e8af998376a4a589f6330a927bb0a410af65b6e701f8121d22851
                - 2510c347694ec1df9327b9639a778f5782c0f0aacc7b5185c83e17061ad2e4e7
                transactions:
                - id: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                  inputs:
                  - outputRef:
                      scriptHint: 23412
                      key: b79a405d4035c8331014d8c584fb55e0019848b991dec6d3ddde778435ab5729
                    unlockScript: 003b84c588651efae72b1b2cd28b049b0beb11d0a40f859076fcba69074fd4f17ea3
                  outputs:
                  - amount: 1000000000000000000
                    address: M1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y9n
                    lockTime: 1234
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                detail: Ouch
                status: 500
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
              example:
                detail: Self clique unsynced
                status: 503
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /addresses/{address}/balance:
    get:
      tags:
      - Addresses
      summary: Get the balance of a address
      operationId: getAddressesAddressBalance
      parameters:
      - name: address
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
              example:
                balance: 1000000000000000000
                lockedBalance: 500000000000000000
                utxoNum: 3
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                detail: Ouch
                status: 500
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
              example:
                detail: Self clique unsynced
                status: 503
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /addresses/{address}/group:
    get:
      tags:
      - Addresses
      summary: Get the group of a address
      operationId: getAddressesAddressGroup
      parameters:
      - name: address
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
              example:
                group: 2
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                detail: Ouch
                status: 500
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
              example:
                detail: Self clique unsynced
                status: 503
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /blockflow/hashes:
    get:
      tags:
      - Blockflow
      summary: Get all block's hashes at given height for given groups
      operationId: getBlockflowHashes
      parameters:
      - name: fromGroup
        in: query
        required: true
        schema:
          type: integer
      - name: toGroup
        in: query
        required: true
        schema:
          type: integer
      - name: height
        in: query
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HashesAtHeight'
              example:
                headers:
                - f2052cffdf26f0f5005fe5f6bf92117fccf5c6c5275514ab367741f5c8dd957f
                - e2962e506f1c59c221bbe85e7d192ffd25089401ad4ffeee8bb3bf231afdd3ef
                - b3d170a0e6e4944889f0911ff70f59ada15f21ac9c52c1acde0bba181e864f35
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                detail: Ouch
                status: 500
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
              example:
                detail: Self clique unsynced
                status: 503
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /blockflow/chains:
    get:
      tags:
      - Blockflow
      summary: Get infos about the chain from the given groups
      operationId: getBlockflowChains
      parameters:
      - name: fromGroup
        in: query
        required: true
        schema:
          type: integer
      - name: toGroup
        in: query
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChainInfo'
              example:
                currentHeight: 42
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                detail: Ouch
                status: 500
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
              example:
                detail: Self clique unsynced
                status: 503
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /transactions/unconfirmed:
    get:
      tags:
      - Transactions
      summary: List unconfirmed transactions
      operationId: getTransactionsUnconfirmed
      parameters:
      - name: fromGroup
        in: query
        required: true
        schema:
          type: integer
      - name: toGroup
        in: query
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tx'
              example:
              - id: d245837adba90f690f4611e35c4d55fd89d71fbe980d22173ad53af92536a755
                inputs:
                - outputRef:
                    scriptHint: 23412
                    key: 425a25d24beab185cf7467c7d30fe2c63113872461b6649f68cd02bb608a8d08
                  unlockScript: 00b549542daa69e027e7cafd19fbd7ec5e436ed70a4a353f9dcf4a54988bbe2523cb
                outputs:
                - amount: 1000000000000000000
                  address: M1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y9n
                  lockTime: 1234
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                detail: Ouch
                status: 500
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
              example:
                detail: Self clique unsynced
                status: 503
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /transactions/build:
    get:
      tags:
      - Transactions
      summary: Build an unsigned transaction
      operationId: getTransactionsBuild
      parameters:
      - name: fromKey
        in: query
        required: true
        schema:
          type: string
      - name: toAddress
        in: query
        required: true
        schema:
          type: string
      - name: lockTime
        in: query
        required: false
        schema:
          type: integer
          format: int64
          minimum: 0
      - name: value
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildTransactionResult'
              example:
                unsignedTx: 0ecd20654c2e2be708495853e8da35c664247040c00bd10b9b13
                txId: 3bd4d3492fd937ca0cc3f98d650c9d47c3fac99035dbf45c01754ea9af6bb0fe
                fromGroup: 2
                toGroup: 1
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                detail: Ouch
                status: 500
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
              example:
                detail: Self clique unsynced
                status: 503
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /transactions/send:
    post:
      tags:
      - Transactions
      summary: Send a signed transaction
      operationId: postTransactionsSend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendTransaction'
            example:
              unsignedTx: 0ecd20654c2e2be708495853e8da35c664247040c00bd10b9b13
              signature: 664eb39eb31b0e39b8d4e27898252cc48fe7f8c2c64469e486bc6ec2b1ae01b669152a2091b045f690d49e4ea5ae0770b62ab5b943a6618441fec9ba6c1d4a12
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TxResult'
              example:
                txId: 72322f8e5b5b4b8651a8392daff8e84eac6808009c9cf4439b798f9ee3c0365f
                fromGroup: 2
                toGroup: 1
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                detail: Ouch
                status: 500
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
              example:
                detail: Self clique unsynced
                status: 503
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /transactions/status:
    get:
      tags:
      - Transactions
      summary: Get tx status
      operationId: getTransactionsStatus
      parameters:
      - name: txId
        in: query
        required: true
        schema:
          type: string
      - name: fromGroup
        in: query
        required: true
        schema:
          type: integer
      - name: toGroup
        in: query
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TxStatus'
              examples:
                Example0:
                  value:
                    Confirmed:
                      blockHash: 1491d566068db3f426a4c0fdca653373b25a5aaf850202ccd3cb01f3c83fc47f
                      blockIndex: 0
                      chainConfirmations: 1
                      fromGroupConfirmations: 2
                      toGroupConfirmations: 3
                Example1:
                  summary: Tx is still in mempool
                  value:
                    MemPooled: {}
                Example2:
                  summary: Cannot find tx with the id
                  value:
                    NotFound: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                detail: Ouch
                status: 500
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
              example:
                detail: Self clique unsynced
                status: 503
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /contracts/send:
    post:
      tags:
      - Contracts
      summary: Send a signed smart contract
      operationId: postContractsSend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendContract'
            example:
              code: 0ecd20654c2e2be708495853e8da35c664247040c00bd10b9b13
              tx: 0ecd20654c2e2be708495853e8da35c664247040c00bd10b9b13
              signature: 664eb39eb31b0e39b8d4e27898252cc48fe7f8c2c64469e486bc6ec2b1ae01b669152a2091b045f690d49e4ea5ae0770b62ab5b943a6618441fec9ba6c1d4a12
              fromGroup: 2
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TxResult'
              example:
                txId: d1104367bc3c0c3dfaf78d8c312ecf71e4be53294be44fbc99113e14f2b55cba
                fromGroup: 2
                toGroup: 1
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                detail: Ouch
                status: 500
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
              example:
                detail: Self clique unsynced
                status: 503
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /contracts/compile:
    post:
      tags:
      - Contracts
      summary: Compile a smart contract
      operationId: postContractsCompile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Compile'
            example:
              address: M1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y9n
              type: contract
              code: 'TxContract Foo(bar: ByteVec) {

                pub payable fn baz(amount: U256) -> () {

                issueToken!(amount)

                }}'
              state: '#0ef875c5a01c48ec4c0332b1036cdbfabca2d71622b67c29ee32c0dce74f2dc7'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompileResult'
              example:
                code: 0ecd20654c2e2be708495853e8da35c664247040c00bd10b9b13
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                detail: Ouch
                status: 500
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
              example:
                detail: Self clique unsynced
                status: 503
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /contracts/build:
    post:
      tags:
      - Contracts
      summary: Build an unsigned contract
      operationId: postContractsBuild
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildContract'
            example:
              fromKey: b3681c3801d21f6d2240e615046f7028f8415233f1941aea9f320df0778950d4db
              code: 0ecd20654c2e2be708495853e8da35c664247040c00bd10b9b13
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildContractResult'
              example:
                unsignedTx: 0ecd20654c2e2be708495853e8da35c664247040c00bd10b9b13
                hash: 13f67f272c339b578d169e13fe75ad4ecea00bf05a5041a50ce20df8eea83c1d
                fromGroup: 2
                toGroup: 1
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                detail: Ouch
                status: 500
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
              example:
                detail: Self clique unsynced
                status: 503
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /miners:
    post:
      tags:
      - Miners
      summary: Execute an action on miners
      operationId: postMiners
      parameters:
      - name: action
        in: query
        required: true
        schema:
          type: string
        examples:
          Start mining:
            value: start-mining
          Stop mining:
            value: stop-mining
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: boolean
              example: true
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                detail: Ouch
                status: 500
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
              example:
                detail: Self clique unsynced
                status: 503
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /miners/addresses:
    get:
      tags:
      - Miners
      summary: List miner's addresses
      operationId: getMinersAddresses
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinerAddresses'
              example:
                addresses:
                - M1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y9n
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                detail: Ouch
                status: 500
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
              example:
                detail: Self clique unsynced
                status: 503
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
    put:
      tags:
      - Miners
      summary: Update miner's addresses
      operationId: putMinersAddresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MinerAddresses'
            example:
              addresses:
              - M1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y9n
        required: true
      responses:
        '200':
          description: ''
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                detail: Ouch
                status: 500
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
              example:
                detail: Self clique unsynced
                status: 503
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /miners/block-candidate:
    get:
      tags:
      - Miners
      summary: Get the next block candidate for a chain
      operationId: getMinersBlock-candidate
      parameters:
      - name: fromGroup
        in: query
        required: true
        schema:
          type: integer
      - name: toGroup
        in: query
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockCandidate'
              example:
                deps:
                - 3c8bf5681af4c1c870910aec2a8ed8e99b2db90c0b4e5e3107814d35a56472c6
                - 6ae8833d36b0c5c35ab6a68831b7c93357e01817cf84ddc6f9b5f95c53f9d66f
                target: 1a400000
                blockTs: 1616761194741
                txsHash: 9f2c2da46e8c32cb87d4ccd33c14fb7c1fff1c8a375b4dcc66ce529d8f580b52
                transactions:
                - 0ecd20654c2e2be708495853e8da35c664247040c00bd10b9b13
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                detail: Ouch
                status: 500
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
              example:
                detail: Self clique unsynced
                status: 503
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
  /miners/new-block:
    post:
      tags:
      - Miners
      summary: Post a block solution
      operationId: postMinersNew-block
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockSolution'
            example:
              blockDeps:
              - b16c072cb72d1fa6fb26a49b6a490fe9975c51df840a4165d39cb306f6fbf4bc
              timestamp: 1616761194741
              fromGroup: 1
              toGroup: 2
              miningCount: 2
              target: 1a400000
              nonce: 2
              txsHash: edb4f90e1d1b7608957772f80cc8bdf4ed9ae2feb4c845f53cb517882f4b03bc
              transactions:
              - 0ecd20654c2e2be708495853e8da35c664247040c00bd10b9b13
        required: true
      responses:
        '200':
          description: ''
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                detail: Something bad in the request
                status: 400
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                detail: Ouch
                status: 500
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                resource: wallet-name
                status: 404
                detail: wallet-name not found
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
              example:
                detail: Self clique unsynced
                status: 503
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                detail: You shall not pass
                status: 401
components:
  schemas:
    WalletCreation:
      required:
      - password
      type: object
      properties:
        password:
          type: string
        walletName:
          type: string
        isMiner:
          type: boolean
        mnemonicPassphrase:
          type: string
        mnemonicSize:
          type: integer
    BadRequest:
      required:
      - status
      - detail
      type: object
      properties:
        status:
          type: integer
        detail:
          type: string
    NotFound:
      required:
      - status
      - detail
      type: object
      properties:
        status:
          type: integer
        detail:
          type: string
    Unauthorized:
      required:
      - status
      - detail
      type: object
      properties:
        status:
          type: integer
        detail:
          type: string
    Result:
      required:
      - walletName
      - mnemonic
      type: object
      properties:
        walletName:
          type: string
        mnemonic:
          type: string
    WalletRestore:
      required:
      - password
      - mnemonic
      type: object
      properties:
        password:
          type: string
        mnemonic:
          type: string
        isMiner:
          type: boolean
        walletName:
          type: string
        mnemonicPassphrase:
          type: string
    Result1:
      required:
      - walletName
      type: object
      properties:
        walletName:
          type: string
    WalletStatus:
      required:
      - walletName
      - locked
      type: object
      properties:
        walletName:
          type: string
        locked:
          type: boolean
    WalletUnlock:
      required:
      - password
      type: object
      properties:
        password:
          type: string
    WalletDeletion:
      required:
      - password
      type: object
      properties:
        password:
          type: string
    Balances:
      required:
      - totalBalance
      type: object
      properties:
        totalBalance:
          type: integer
          format: uint256
        balances:
          type: array
          items:
            $ref: '#/components/schemas/AddressBalance'
    AddressBalance:
      required:
      - address
      - balance
      type: object
      properties:
        address:
          type: string
        balance:
          type: integer
          format: uint256
    Transfer:
      required:
      - address
      - amount
      type: object
      properties:
        address:
          type: string
        amount:
          type: integer
          format: uint256
    Result2:
      required:
      - txId
      - fromGroup
      - toGroup
      type: object
      properties:
        txId:
          type: string
        fromGroup:
          type: integer
        toGroup:
          type: integer
    Addresses:
      required:
      - activeAddress
      type: object
      properties:
        activeAddress:
          type: string
        addresses:
          type: array
          items:
            type: string
    MinerAddressesInfo:
      type: object
      properties:
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/AddressInfo'
    AddressInfo:
      required:
      - address
      - group
      type: object
      properties:
        address:
          type: string
        group:
          type: integer
    ChangeActiveAddress:
      required:
      - address
      type: object
      properties:
        address:
          type: string
    InternalServerError:
      required:
      - status
      - detail
      type: object
      properties:
        status:
          type: integer
        detail:
          type: string
    ServiceUnavailable:
      required:
      - status
      - detail
      type: object
      properties:
        status:
          type: integer
        detail:
          type: string
    SelfClique:
      required:
      - cliqueId
      - networkType
      - numZerosAtLeastInHash
      - synced
      - groupNumPerBroker
      - groups
      type: object
      properties:
        cliqueId:
          type: string
        networkType:
          $ref: '#/components/schemas/NetworkType'
        numZerosAtLeastInHash:
          type: integer
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/PeerAddress'
        synced:
          type: boolean
        groupNumPerBroker:
          type: integer
        groups:
          type: integer
    NetworkType:
      oneOf:
      - $ref: '#/components/schemas/Devnet'
      - $ref: '#/components/schemas/Mainnet'
      - $ref: '#/components/schemas/Testnet'
    Devnet:
      type: object
    Mainnet:
      type: object
    Testnet:
      type: object
    PeerAddress:
      required:
      - address
      - restPort
      - wsPort
      type: object
      properties:
        address:
          type: string
        restPort:
          type: integer
        wsPort:
          type: integer
    InterCliquePeerInfo:
      required:
      - cliqueId
      - brokerId
      - groupNumPerBroker
      - address
      - isSynced
      type: object
      properties:
        cliqueId:
          type: string
        brokerId:
          type: integer
        groupNumPerBroker:
          type: integer
        address:
          type: string
        isSynced:
          type: boolean
    BrokerInfo:
      required:
      - cliqueId
      - brokerId
      - groupNumPerBroker
      - address
      type: object
      properties:
        cliqueId:
          type: string
        brokerId:
          type: integer
        groupNumPerBroker:
          type: integer
        address:
          type: string
    PeerMisbehavior:
      required:
      - peer
      - status
      type: object
      properties:
        peer:
          type: string
        status:
          $ref: '#/components/schemas/PeerStatus'
    PeerStatus:
      oneOf:
      - $ref: '#/components/schemas/Banned'
      - $ref: '#/components/schemas/Penalty'
    Banned:
      required:
      - until
      type: object
      properties:
        until:
          type: integer
    Penalty:
      required:
      - value
      type: object
      properties:
        value:
          type: integer
    FetchResponse:
      type: object
      properties:
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/BlockEntry'
    BlockEntry:
      required:
      - hash
      - timestamp
      - chainFrom
      - chainTo
      - height
      type: object
      properties:
        hash:
          type: string
        timestamp:
          type: integer
        chainFrom:
          type: integer
        chainTo:
          type: integer
        height:
          type: integer
        deps:
          type: array
          items:
            type: string
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Tx'
    Tx:
      required:
      - id
      type: object
      properties:
        id:
          type: string
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/Input'
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/Output'
    Input:
      required:
      - outputRef
      type: object
      properties:
        outputRef:
          $ref: '#/components/schemas/OutputRef'
        unlockScript:
          type: string
    OutputRef:
      required:
      - scriptHint
      - key
      type: object
      properties:
        scriptHint:
          type: integer
        key:
          type: string
    Output:
      required:
      - amount
      - address
      type: object
      properties:
        amount:
          type: integer
          format: uint256
        address:
          type: string
        lockTime:
          type: integer
    Balance:
      required:
      - balance
      - lockedBalance
      - utxoNum
      type: object
      properties:
        balance:
          type: integer
          format: uint256
        lockedBalance:
          type: integer
          format: uint256
        utxoNum:
          type: integer
    Group:
      required:
      - group
      type: object
      properties:
        group:
          type: integer
    HashesAtHeight:
      type: object
      properties:
        headers:
          type: array
          items:
            type: string
    ChainInfo:
      required:
      - currentHeight
      type: object
      properties:
        currentHeight:
          type: integer
    BuildTransactionResult:
      required:
      - unsignedTx
      - txId
      - fromGroup
      - toGroup
      type: object
      properties:
        unsignedTx:
          type: string
        txId:
          type: string
        fromGroup:
          type: integer
        toGroup:
          type: integer
    SendTransaction:
      required:
      - unsignedTx
      - signature
      type: object
      properties:
        unsignedTx:
          type: string
        signature:
          type: string
    TxResult:
      required:
      - txId
      - fromGroup
      - toGroup
      type: object
      properties:
        txId:
          type: string
        fromGroup:
          type: integer
        toGroup:
          type: integer
    TxStatus:
      oneOf:
      - $ref: '#/components/schemas/Confirmed'
      - $ref: '#/components/schemas/MemPooled'
      - $ref: '#/components/schemas/NotFound1'
    Confirmed:
      required:
      - blockHash
      - blockIndex
      - chainConfirmations
      - fromGroupConfirmations
      - toGroupConfirmations
      type: object
      properties:
        blockHash:
          type: string
        blockIndex:
          type: integer
        chainConfirmations:
          type: integer
        fromGroupConfirmations:
          type: integer
        toGroupConfirmations:
          type: integer
    MemPooled:
      type: object
    NotFound1:
      type: object
    SendContract:
      required:
      - code
      - tx
      - signature
      - fromGroup
      type: object
      properties:
        code:
          type: string
        tx:
          type: string
        signature:
          type: string
        fromGroup:
          type: integer
    Compile:
      required:
      - address
      - type
      - code
      type: object
      properties:
        address:
          type: string
        type:
          type: string
        code:
          type: string
        state:
          type: string
    CompileResult:
      required:
      - code
      type: object
      properties:
        code:
          type: string
    BuildContract:
      required:
      - fromKey
      - code
      type: object
      properties:
        fromKey:
          type: string
        code:
          type: string
    BuildContractResult:
      required:
      - unsignedTx
      - hash
      - fromGroup
      - toGroup
      type: object
      properties:
        unsignedTx:
          type: string
        hash:
          type: string
        fromGroup:
          type: integer
        toGroup:
          type: integer
    MinerAddresses:
      type: object
      properties:
        addresses:
          type: array
          items:
            type: string
    BlockCandidate:
      required:
      - target
      - blockTs
      - txsHash
      type: object
      properties:
        deps:
          type: array
          items:
            type: string
        target:
          type: string
        blockTs:
          type: integer
        txsHash:
          type: string
        transactions:
          type: array
          items:
            type: string
    BlockSolution:
      required:
      - timestamp
      - fromGroup
      - toGroup
      - miningCount
      - target
      - nonce
      - txsHash
      type: object
      properties:
        blockDeps:
          type: array
          items:
            type: string
        timestamp:
          type: integer
        fromGroup:
          type: integer
        toGroup:
          type: integer
        miningCount:
          type: integer
          format: uint256
        target:
          type: string
        nonce:
          type: integer
          format: uint256
        txsHash:
          type: string
        transactions:
          type: array
          items:
            type: string
